{"version":3,"sources":["store/redux/PostRedux/PostRedux.js","components/Login/Login.js","UI/Navbar/Navbar.js","UI/Spinner/Spinner.js","components/BlogPost/BlogPost.js","App.js","reportWebVitals.js","store/redux/root_redux.js","store/saga/LoginSaga/LoginSaga.js","store/saga/PostSaga/PostSaga.js","store/saga/root_saga.js","index.js","store/redux/LoginRedux/LoginRedux.js"],"names":["INITILIZE_POST_INIT","INITILIZE_POST_SUCCESS","POST_CLICK_INIT","POST_CLICK_SUCCESS","SAVE_POST_INIT","SAVE_POST_SUCCESS","SHARE_POST_INIT","SHARE_POST_SUCCESS","initializePostInit","type","initializePostSuccess","userPost","postClickInit","postClickSuccess","pendingPostArray","approvedPost","adminPost","shareHandlerInit","selectedUser","selectedPost","sharePostSuccess","saveHandlerInit","post","date","saveHandlerSuccess","initialState","Post","state","action","Login","props","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","useState","touched","setTouched","isAuth","useSelector","dispatch","useDispatch","className","onSubmit","data","remainingDuration","expirationTime","currentTime","Date","getTime","calculateRemainingTime","setTimeout","loginAction","username","password","htmlFor","classNames","placeholder","required","message","Navbar","match","console","log","loggedInUser","id","onClick","to","path","data-toggle","firstName","lastName","aria-labelledby","window","confirm","Spinner","loading","color","size","BlogPost","ProfilePage","React","lazy","Promise","resolve","PostPage","fallback","App","isSubmit","setIsSubmit","useEffect","routes","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizeHandlerSaga","logoutHandlerSaga","submitHandlerSaga","profileHandlerSaga","postHandlerSaga","saveHandlerSaga","editUserHandlerSaga","deleteUserHandlerSaga","saveUserHandlerSaga","saveCreateUserHandlerSaga","localValue","JSON","parse","localStorage","getItem","localBlog","loginBlogApp","openProfile","openPost","usersDetail","editObject","undefined","userArrayDetail","push","role","phonenumber","setItem","stringify","put","loginBlog","updateValue","users","values","find","user","editObjIndex","findIndex","splice","editUser","initilizeSage","savePostHandlerSaga","allPostClickSaga","sharePostHandlerSaga","userPosts","arrayPost","postAction","sharePost","postObject","approved","reverse","forEach","e","i","length","j","localObject","editObjectIndex","watch","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById","INITLIZE_APP","SIGNUP_SUBMIT_INIT","SIGNUP_SUBMIT_SUCCESS","LOGOUT_SESSION_INIT","LOGOUT_SESSION_SUCCESS","PROFILE_HANDLER_INIT","PROFILE_HANDLER_SUCCESS","POST_HANDLER_INIT","POST_HANDLER_SUCCESS","SAVE_INIT","SAVE_SUCCESS","EDIT_USER_INIT","EDIT_USER_SUCCESS","DELETE_USER_INIT","DELETE_USER_SUCCESS","SAVE_EDIT_USER_INIT","SAVE_EDIT_USER_SUCCESS","SAVE_CREATE_USER_INIT","SAVE_CREATE_USER_SUCCESS","initlizerAppInit","submitHandlerInit","valid","submitHandlerSuccess","logoutHandlerInit","logoutHandlerSuccess","profileHandlerInit","profileHandlerSuccess","postHandlerInit","postHandlerSuccess","editUserHandlerInit","editUserHandlerSuccess","deleteUserHandlerInit","deleteUserHandlerSuccess","saveUserHandlerInit","saveUserHandlerSuccess","createUserHandlerInit","createUserHandlerSuccess"],"mappings":"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","file":"static/js/main.4cb49268.chunk.js","sourcesContent":["export  const INITILIZE_POST_INIT = \"INITILIZE_POST_INIT\";\r\nexport const INITILIZE_POST_SUCCESS = \"INITILIZE_POST_SUCCESS\";\r\n\r\nexport const POST_CLICK_INIT = \"POST_CLICK_INIT\";\r\nexport const POST_CLICK_SUCCESS = \"POST_CLICK_SUCCESS\";\r\n\r\nexport const SAVE_POST_INIT = \"SAVE_POST_INIT\";\r\nexport const SAVE_POST_SUCCESS = \"SAVE_POST_SUCCESS\";\r\n\r\nexport const SHARE_POST_INIT = \"SHARE_POST_INIT\";\r\nexport const SHARE_POST_SUCCESS = \"SHARE_POST_SUCCESS\";\r\n\r\nexport const initializePostInit = ()=>{\r\n    return{\r\n        type : INITILIZE_POST_INIT\r\n    }\r\n}\r\nexport const initializePostSuccess = (userPost) =>{\r\n    return{\r\n        type : INITILIZE_POST_SUCCESS,\r\n        userPost:userPost\r\n    }\r\n}\r\n\r\nexport const postClickInit = (userPost) =>{\r\n    return{\r\n        type : POST_CLICK_INIT,\r\n        userPost : userPost\r\n    }\r\n}\r\nexport const postClickSuccess = (pendingPostArray,approvedPost,adminPost) =>{\r\n    return{\r\n        type : POST_CLICK_SUCCESS,\r\n        pendingPostArray : pendingPostArray,\r\n        approvedPost : approvedPost,\r\n        adminPost : adminPost\r\n    }\r\n}\r\nexport const shareHandlerInit = (selectedUser,selectedPost) =>{\r\n    return{\r\n        type : SHARE_POST_INIT,\r\n        selectedUser : selectedUser,\r\n        selectedPost : selectedPost\r\n    }\r\n}\r\nexport const sharePostSuccess = (userPost) =>{\r\n    return{\r\n        type : SHARE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\nexport const saveHandlerInit = (post,date) =>{\r\n    return{\r\n        type:SAVE_POST_INIT,\r\n        post : post,\r\n        date : date      \r\n    }\r\n}\r\nexport const saveHandlerSuccess = (userPost) =>{\r\n    return{\r\n        type:SAVE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\nconst initialState = {\r\n    userPost : [],\r\n    pendingPostArray : [],\r\n    approvedPost : [],\r\n    adminPost : []\r\n}\r\nconst Post = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INITILIZE_POST_SUCCESS : \r\n        return{\r\n            ...state,\r\n            userPost : action.userPost\r\n        }\r\n\r\n        case POST_CLICK_SUCCESS : \r\n        return{\r\n            ...state,\r\n            pendingPostArray : action.pendingPostArray,\r\n            approvedPost : action.approvedPost,\r\n            adminPost : action.adminPost\r\n        }\r\n        case SAVE_POST_SUCCESS : \r\n         return{\r\n             ...state,\r\n             userPost : action.userPost\r\n        }\r\n        case SHARE_POST_SUCCESS :\r\n            return{\r\n                ...state,\r\n                userPost : action.userPost\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Post;","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\nconst Login = (props) => {\r\n  const { register, formState: { errors, isValid }, handleSubmit, reset } = useForm({ mode: \"onChange\" });\r\n  const [touched, setTouched] = useState(false);\r\n  const isAuth = useSelector(state => state.Login.isAuth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n    return remainingDuration;\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    setTouched(true);\r\n    const expirationTime = new Date((new Date().getTime() + 3600000));\r\n    const remainingDuration = calculateRemainingTime(expirationTime);\r\n    setTimeout(() => {\r\n      dispatch(loginAction.logoutHandlerInit());\r\n    }, remainingDuration);\r\n    dispatch(loginAction.submitHandlerInit(data, isValid));\r\n    reset({ username: \"\", password: \"\" });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"container my-5\">\r\n        <h1 className=\"display-4 heading\">Blog post Login</h1>\r\n        <div className=\"jumbotron \">\r\n          {!isAuth && touched && (\r\n            <small className=\"form-text text-muted textIfFail\">\r\n              Please get Approval From Admin Or Check UserName & Password.\r\n            </small>\r\n          )}\r\n          <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">User Name </label>\r\n              <input className={classNames(\"form-control\", { \"is-invalid\": errors.username })} type=\"text\" placeholder=\"Enter Your User Name\" {...register(\"username\", { required: \"Field Required\" })} />\r\n              {errors.username && <p className=\"invalid-feedback\">{errors.username.message}</p>}\r\n            </div>\r\n            <div className=\"form-group \">\r\n              <label htmlFor=\"password\">Password </label>\r\n              <input className={classNames(\"form-control\", { \"is-invalid\": errors.password })} type=\"password\" placeholder=\"Enter Your Password\" {...register(\"password\", { required: \"Field Required\" })} />\r\n              {errors.password && <p className=\"invalid-feedback\">{errors.password.message}</p>}\r\n            </div>\r\n            <button className=\"btn btn-outline-info\" type=\"submit\">Sign Up</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import React from 'react';\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar =({match}) => {\r\nconsole.log(match);\r\n  const loggedInUser = useSelector(state => state.Login.loggedInUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const confirmLogoutHandler = () =>{\r\n    if (window.confirm(\"Do you want to Signout?\")) {\r\n      dispatch(loginAction.logoutHandlerInit());\r\n    }\r\n  }\r\n\r\n  return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div\r\n            className=\"collapse navbar-collapse container\"\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item dropdown\">\r\n                <p\r\n                  className=\"nav-link\"\r\n                  onClick={()=>dispatch(loginAction.postHandlerInit())}\r\n                >\r\n                <Link className=\"nav-link\" to ={`${match.path}`} >  <CommentIcon /> Posts</Link>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <div id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item dropdown\">\r\n                    <p\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      id=\"navbarDropdown\"\r\n                      data-toggle=\"dropdown\"\r\n                    >\r\n                      <AccountCircleRoundedIcon />\r\n                      {`${loggedInUser.firstName} ${loggedInUser.lastName}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserProfile\"\r\n                        onClick={()=>dispatch(loginAction.profileHandlerInit())}\r\n                      >\r\n                        <Link className=\"nav-link\" to ={`${match.path}/profile`} > Profile</Link>\r\n                      </p>\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserSignOut\"\r\n                        onClick = {confirmLogoutHandler}\r\n                      >\r\n                      <Link className = \"nav-link\" to = {`${match.path}/login`}>SignOut</Link>\r\n                        {/* SignOut */}\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </nav> \r\n        </div>\r\n    )\r\n }\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = ({loading}) => {\r\n    return (\r\n        <div className = \"Spinner\">\r\n             <ClimbingBoxLoader color={'#2caabe'} loading={loading} size={20} />\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;","import React, { Suspense } from \"react\";\r\nimport Navbar from \"../../UI/Navbar/Navbar\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport {Switch,Route} from \"react-router-dom\";\r\n\r\n\r\nconst BlogPost = ({match}) =>{\r\n    const ProfilePage = React.lazy(()=>{\r\n    return new Promise (resolve =>{\r\n        setTimeout(()=>resolve(import('../../container/Profile/Profile')),3000);\r\n    })\r\n});\r\n\r\nconst PostPage = React.lazy(()=>{\r\n  return new Promise (resolve =>{\r\n      setTimeout(()=>resolve(import('../../container/Post/Post')),3000);\r\n  })\r\n});\r\n\r\n\r\n  return (\r\n      <div>\r\n        <Navbar match={match}/>\r\n            <Switch>\r\n            <Suspense fallback = {<Spinner loading={true}></Spinner>}>\r\n                <Route path={`${match.path}`} >\r\n                  <PostPage />\r\n                </Route>\r\n                <Route path={`${match.path}/profile`} >\r\n                  <ProfilePage />\r\n                </Route>\r\n                \r\n            </Suspense>\r\n            </Switch>\r\n      </div>\r\n    );\r\n}\r\nexport default BlogPost;\r\n\r\n//  class BlogPost extends Component {\r\n//   state={\r\n//     openProfile : false,\r\n//     openPost : true,\r\n//     loading : false\r\n//   }\r\n//   componentDidMount(){\r\n//     this.setState({loading : true});\r\n//     setTimeout(()=>{\r\n//       this.setState({loading : false});\r\n//     },3000)\r\n//   }\r\n//   componentDidUpdate(){\r\n//     if(this.state.openPost !== this.props.openPost || this.state.openProfile !== this.props.openProfile){\r\n//       this.setState({openProfile : this.props.openProfile,openPost : this.props.openPost},()=>{\r\n//         this.setState({loading : true});\r\n//         setTimeout(()=>{\r\n//           this.setState({loading : false});\r\n//         },3000)  \r\n//       })\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//        <Navbar loggedInUser ={this.props.loggedInUser} logoutHandler ={this.props.logoutHandler} profileHandler ={this.props.profileHandler} postHandler = {this.props.postHandler}/>\r\n//         {this.state.openPost ? \r\n//         this.state.loading ? <Spinner loading={this.state.loading} /> : <Post loggedInUser ={this.props.loggedInUser}/> :\r\n//         this.state.openProfile  && this.state.loading ? <Spinner loading={this.state.loading} /> : <Profile loggedInUser ={this.props.loggedInUser}/>}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default BlogPost;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport * as loginAction from \"./store/redux/LoginRedux/LoginRedux\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BlogPost from \"./components/BlogPost/BlogPost\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const isAuth = useSelector((state) => state.Login.isAuth);\n\n  const dispatch = useDispatch();\n\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  useEffect(() => {\n    dispatch(loginAction.initlizerAppInit());\n  }, []);\n\n  useEffect(() => {\n    if (isAuth !== isSubmit) {\n      setIsSubmit(isAuth);\n    }\n  }, [isAuth]);\n\n  let routes = !isSubmit ? (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route path = \"*\">\n        <Redirect to=\"/\" />\n      </Route> \n    </Switch>\n  ) : (\n    <Switch>\n      <Route path=\"/\" component={BlogPost} />\n      <Route path=\"/login\" component={Login} />\n    </Switch>\n  );\n  return <div>{routes}</div>;\n};\nexport default App;\n// class App extends Component {\n//   state = {\n//     isSubmit : false\n//   }\n\n//   componentDidMount(){\n//     this.props.onInitlizeApp();\n//   }\n\n//   componentDidUpdate(){\n//     if(this.state.isSubmit !== this.props.isAuth){\n//       this.setState({isSubmit : this.props.isAuth})\n//     }\n//   }\n\n//   confirmLogoutHandler = () =>{\n//     if (window.confirm(\"Do you want to Signout?\")) {\n//      this.props.onLogoutHandler();\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         {!this.state.isSubmit ?\n//           <Login\n//           submitButtonHandler = {this.props.onSubmitHandler}\n//           isAuthenticate = {this.props.isAuth}\n//           />\n//           :\n//           <BlogPost\n//           loggedInUser = {this.props.loggedInUser}\n//           logoutHandler = {this.confirmLogoutHandler}\n//           profileHandler = {this.props.onProfileHandler}\n//           openProfile = {this.props.openProfile}\n//           postHandler = {this.props.onPostHandler}\n//           openPost = {this.props.openPost}\n//           /> }\n//       </div>\n//     )\n//   }\n// }\n// const mapStateToProps = state =>{\n//   return{\n//     isAuth : state.Login.isAuth,\n//     loggedInUser : state.Login.loggedInUser,\n//     openProfile : state.Login.openProfile,\n//     openPost : state.Login.openPost\n//   }\n// }\n// const mapDispatchToProps = dispatch =>{\n//   return{\n//     onInitlizeApp : ()=> dispatch(loginAction.initlizerAppInit()),\n//     onSubmitHandler : (values,valid) => dispatch(loginAction.submitHandlerInit(values,valid)),\n//     onLogoutHandler : ()=>dispatch(loginAction.logoutHandlerInit()),\n//     onProfileHandler : () =>dispatch(loginAction.profileHandlerInit()),\n//     onPostHandler : () =>dispatch(loginAction.postHandlerInit())\n//   }\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport Login from \"./LoginRedux/LoginRedux\";\r\nimport Post from \"./PostRedux/PostRedux\";\r\n\r\nexport default combineReducers({\r\n    Login,Post\r\n})\r\n","import * as loginAction from \"../../redux/LoginRedux/LoginRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\nexport function* initilizeHandlerSaga(){\r\n    const localValue =  JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const localBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n\r\n    const loginBlogApp = {\r\n        isAuth : false,\r\n        loggedInUser : {},\r\n        openProfile : false,\r\n        openPost : true,\r\n        usersDetail : [],\r\n        editObject : {},\r\n        userPost : []\r\n    }\r\n    if(localBlog.loggedInUser !== null && localBlog.loggedInUser.username !== undefined){\r\n        loginBlogApp.isAuth = true\r\n        loginBlogApp.loggedInUser = localBlog.loggedInUser;\r\n    }\r\n    \r\n    if (localValue === null) {\r\n        const userArrayDetail = [];\r\n        const userDetail = {\r\n            username: \"vivek@123\",\r\n            password: \"Vivek@123\",\r\n            role: \"admin\",\r\n            firstName: \"Vivek\",\r\n            lastName: \"Bindal\",\r\n            phonenumber: 8888269609,\r\n        }\r\n        userArrayDetail.push(userDetail);\r\n       yield localStorage.setItem(\"usersDetail\", JSON.stringify(userArrayDetail));\r\n       loginBlogApp.usersDetail = userArrayDetail;\r\n    }    \r\n    else{\r\n        loginBlogApp.usersDetail = localValue; \r\n    }\r\n    yield put(loginAction.submitHandlerSuccess(loginBlogApp));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlogApp));\r\n}\r\n\r\nexport function* logoutHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.isAuth = false;\r\n    updateValue.loggedInUser = {};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    updateValue.editObject = {};\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.logoutHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* submitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.username && localValue[users].password === action.password){\r\n            loginBlog.isAuth = action.isAuth;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n            yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n            yield put(loginAction.submitHandlerSuccess(loginBlog));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* profileHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = true;\r\n    updateValue.openPost = false;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.profileHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* postHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.postHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* saveHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.values.username && localValue[users].role === action.values.role){\r\n            localValue[users] = action.values;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n        }        \r\n        yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.saveHandlerSuccess(loginBlog));\r\n    }\r\n}\r\nexport function* editUserHandlerSaga(action){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObject = loginBlog.usersDetail.find(user => user.username === action.username);\r\n        loginBlog.editObject = editObject;\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.editUserHandlerSuccess(loginBlog));    \r\n}\r\n\r\nexport function* deleteUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === action.username);\r\n    loginBlog.usersDetail.splice(editObjIndex, 1);\r\n    localValue = loginBlog.usersDetail;\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.deleteUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n        const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === loginBlog.editObject.username);\r\n        if(loginBlog.editObject.username === loginBlog.loggedInUser.username){\r\n            loginBlog.loggedInUser = action.editUser;\r\n        }\r\n        loginBlog.usersDetail[editObjIndex] = action.editUser;\r\n        localValue = loginBlog.usersDetail;\r\n        loginBlog.editObject = {}    \r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.saveUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveCreateUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    loginBlog.usersDetail.push(action.editUser);\r\n    localValue.push(action.editUser);\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.createUserHandlerSuccess(loginBlog));\r\n}","import * as postAction from \"../../redux/PostRedux/PostRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport function* initilizeSage() {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    if (userPosts === null) {\r\n        let arrayPost = [];\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(arrayPost));\r\n    } else {\r\n        localValue.userPost = userPosts;\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localValue));\r\n        yield put(postAction.initializePostSuccess(userPosts));\r\n        yield put(postAction.postClickInit(userPosts));\r\n    }\r\n}\r\n\r\nexport function* savePostHandlerSaga(action) {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    let approvedPost = false;\r\n    let sharePost = [];\r\n    if (updateValue.loggedInUser.role === \"admin\") {\r\n        approvedPost = true;\r\n    }\r\n    for(let user in updateValue.usersDetail){\r\n        if(updateValue.usersDetail[user].role === \"user\"){\r\n            sharePost.push(updateValue.usersDetail[user].username);           \r\n        }\r\n    }\r\n    const postObject = {\r\n        approved: approvedPost,\r\n        sharePost:sharePost,\r\n        date: action.date,\r\n        post: action.post,\r\n        username: updateValue.loggedInUser.username,\r\n    };\r\n\r\n    userPosts.push(postObject);\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n\r\n    updateValue.userPost = userPosts;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(postAction.saveHandlerSuccess(userPosts));\r\n}\r\n\r\nexport function* allPostClickSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    const pendingPostArray = [];\r\n    const approvedPost = [];\r\n    const adminPost = [];\r\n    // let arrayForPage=[];  \r\n    if (action.userPost !== null) {\r\n        let reverseArray = action.userPost.reverse();\r\n        reverseArray.forEach(e => {\r\n            if (e.username === updateValue.loggedInUser.username || updateValue.loggedInUser.role === \"admin\") {\r\n                // Condition For Pending Post\r\n                if (e.approved === false) {\r\n                    pendingPostArray.push(e);\r\n                    localStorage.setItem(\"postForPending\", JSON.stringify(pendingPostArray));\r\n                }\r\n\r\n                // Condition For all post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role !== \"admin\") {\r\n                        approvedPost.push(e);\r\n                        localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                    }\r\n                }\r\n\r\n                // Condition For Promotional Post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role === \"admin\") {\r\n                        adminPost.push(e);\r\n                        localStorage.setItem(\"postByAdmin\", JSON.stringify(adminPost));\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (e.sharePost !== \"\") {\r\n                for (let i = 0; i < e.sharePost.length; i++) {\r\n                    if (e.sharePost[i] === updateValue.loggedInUser.username) {\r\n                        for (let j = 0; j < updateValue.usersDetail.length; j++) {\r\n                            if (updateValue.usersDetail[j].username === e.sharePost[i] && e.approved === true) {\r\n                                approvedPost.push(e);\r\n                                localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    yield put(postAction.postClickSuccess(pendingPostArray, approvedPost, adminPost));\r\n}\r\n\r\nexport function* sharePostHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localObject = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    let updateValue = [...localValue];\r\n\r\n    const editObjectIndex = updateValue.findIndex(user => (user.username === action.selectedPost.username && user.post === action.selectedPost.post));\r\n    updateValue[editObjectIndex].approved = true;\r\n\r\n        \r\n        updateValue[editObjectIndex].sharePost = action.selectedUser;\r\n    \r\n    localObject.userPost = updateValue;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localObject));\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(updateValue));\r\n    yield put(postAction.sharePostSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as loginAction from \"../redux/LoginRedux/LoginRedux\";\r\nimport * as postAction from \"../redux/PostRedux/PostRedux\";\r\n\r\nimport {initilizeHandlerSaga,submitHandlerSaga,logoutHandlerSaga,profileHandlerSaga,\r\n    postHandlerSaga,saveHandlerSaga,editUserHandlerSaga,\r\n    deleteUserHandlerSaga,saveUserHandlerSaga,saveCreateUserHandlerSaga} from \"./LoginSaga/LoginSaga\";\r\nimport {initilizeSage,savePostHandlerSaga,allPostClickSaga,sharePostHandlerSaga} from \"./PostSaga/PostSaga\";\r\n\r\nexport function* watch(){\r\n    // Login Action\r\n    yield takeLatest(loginAction.INITLIZE_APP,initilizeHandlerSaga);\r\n    yield takeLatest(loginAction.SIGNUP_SUBMIT_INIT,submitHandlerSaga)\r\n    yield takeLatest(loginAction.LOGOUT_SESSION_INIT,logoutHandlerSaga)\r\n    yield takeLatest(loginAction.PROFILE_HANDLER_INIT,profileHandlerSaga)\r\n    yield takeLatest(loginAction.POST_HANDLER_INIT,postHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_INIT,saveHandlerSaga)\r\n    yield takeLatest(loginAction.EDIT_USER_INIT,editUserHandlerSaga)\r\n    yield takeLatest(loginAction.DELETE_USER_INIT,deleteUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_EDIT_USER_INIT,saveUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_CREATE_USER_INIT,saveCreateUserHandlerSaga)\r\n\r\n    // Post Action\r\n    yield takeLatest(postAction.INITILIZE_POST_INIT,initilizeSage)\r\n    yield takeLatest(postAction.SAVE_POST_INIT,savePostHandlerSaga)\r\n    yield takeLatest(postAction.POST_CLICK_INIT,allPostClickSaga)\r\n    yield takeLatest(postAction.SHARE_POST_INIT,sharePostHandlerSaga)\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./store/redux/root_redux\";\nimport {watch} from \"./store/saga/root_saga\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const INITLIZE_APP = \"INITLIZE_APP\";\r\nexport const SIGNUP_SUBMIT_INIT = \"SIGNUP_SUBMIT_INIT\";\r\nexport const SIGNUP_SUBMIT_SUCCESS = \"SIGNUP_SUBMIT_SUCCESS\";\r\nexport const LOGOUT_SESSION_INIT = \"LOGOUT_SESSION_INIT\";\r\nexport const LOGOUT_SESSION_SUCCESS = \"LOGOUT_SESSION_SUCCESS\";\r\nexport const PROFILE_HANDLER_INIT = \"PROFILE_HANDLER_INIT\";\r\nexport const PROFILE_HANDLER_SUCCESS= \"PROFILE_HANDLER_SUCCESS\";\r\nexport const POST_HANDLER_INIT = \"POST_HANDLER_INIT\";\r\nexport const POST_HANDLER_SUCCESS= \"POST_HANDLER_SUCCESS\";\r\nexport const SAVE_INIT = \"SAVE_INIT\";\r\nexport const SAVE_SUCCESS = \"SAVE_SUCCESS\";\r\nexport const EDIT_USER_INIT = \"EDIT_USER_INIT\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const DELETE_USER_INIT = \"DELETE_USER_INIT\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const SAVE_EDIT_USER_INIT = \"SAVE_EDIT_USER_INIT\";\r\nexport const SAVE_EDIT_USER_SUCCESS = \"SAVE_EDIT_USER_SUCCESS\";\r\nexport const SAVE_CREATE_USER_INIT = \"SAVE_CREATE_USER_INIT\";\r\nexport const SAVE_CREATE_USER_SUCCESS = \"SAVE_CREATE_USER_SUCCESS\";\r\n\r\nexport const initlizerAppInit = () =>{\r\n    (\"initlizerAppInit\");\r\n    return{\r\n        type : INITLIZE_APP\r\n    }\r\n}\r\nexport const submitHandlerInit = (values,valid) =>{  \r\n\r\n    \r\n    return{\r\n        type : SIGNUP_SUBMIT_INIT,\r\n        username : values.username,\r\n        password : values.password,\r\n        isAuth : valid\r\n    }\r\n}\r\nexport const submitHandlerSuccess = (loginBlogApp) =>{\r\n\r\n\r\n    return{\r\n        type : SIGNUP_SUBMIT_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openProfile : loginBlogApp.openProfile,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\n\r\nexport const logoutHandlerInit = () =>{\r\n    return{\r\n        type : LOGOUT_SESSION_INIT\r\n    }\r\n}\r\nexport const logoutHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : LOGOUT_SESSION_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openPost:loginBlogApp.openPost,\r\n        openProfile : loginBlogApp.openProfile\r\n    }\r\n}\r\nexport const profileHandlerInit = () =>{\r\n    return{\r\n        type : PROFILE_HANDLER_INIT\r\n    }\r\n}\r\nexport const profileHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : PROFILE_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }\r\n}\r\nexport const postHandlerInit = () =>{\r\n return{\r\n     type : POST_HANDLER_INIT\r\n }   \r\n}\r\nexport const postHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : POST_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }   \r\n   }\r\n\r\n   export const saveHandlerInit = (values) =>{  \r\n\r\n    return{\r\n        type : SAVE_INIT,\r\n        values : values\r\n    }\r\n}\r\nexport const saveHandlerSuccess = (loginBlogApp) =>{  \r\n    return{\r\n        type : SAVE_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const editUserHandlerInit = (username) =>{\r\n    return{\r\n        type : EDIT_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const editUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : EDIT_USER_SUCCESS,\r\n        editObject : loginBlogApp.editObject\r\n    }\r\n}\r\n\r\nexport const deleteUserHandlerInit = (username) =>{\r\n    return{\r\n        type : DELETE_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const deleteUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : DELETE_USER_SUCCESS,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const saveUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_EDIT_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const saveUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_EDIT_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail,\r\n     editObject : loginBlogApp.editObject,\r\n     loggedInUser : loginBlogApp.loggedInUser   \r\n    }\r\n}\r\nexport const createUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_CREATE_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const createUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_CREATE_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nconst initialState = {\r\n    loggedInUser:{},\r\n    isAuth:false,\r\n    openProfile : false,\r\n    openPost : true,\r\n    usersDetail : [],\r\n    editObject : {},  \r\n}\r\nconst Login = (state =initialState ,action) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case LOGOUT_SESSION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser :action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case PROFILE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case POST_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case SAVE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editObject : action.editObject,\r\n        }\r\n        case DELETE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case SAVE_EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail,\r\n            editObject : action.editObject,\r\n            loggedInUser : action.loggedInUser\r\n        }\r\n        case SAVE_CREATE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Login;"],"sourceRoot":""}