{"version":3,"sources":["components/Login/Login.js","store/redux/LoginRedux/LoginRedux.js","UI/Navbar/Navbar.js","UI/Button/Button.js","components/MyProfile/ProfileDetail/ProfileDetail.js","components/MyProfile/EditProfile/EditProfile.js","components/MyProfile/MyProfile.js","components/Users/UserList/UserList.js","UI/BackDrop/BackDrop.js","UI/Modal/Modal.js","components/Users/CreateUser/EditUsers/EditUsers.js","components/Users/CreateUser/NewUser/NewUser.js","components/Users/CreateUser/CreateUser.js","UI/DropDown/DropDown.js","UI/Pagination/Pagination.js","components/Users/Users.js","container/Profile/Profile.js","components/CreatePost/CreatePost.js","store/redux/PostRedux/PostRedux.js","components/SharePost/SharePost.js","UI/ReadMore/ReadMore.js","components/AllPost/AllPost.js","container/Post/Post.js","UI/Spinner/Spinner.js","components/BlogPost/BlogPost.js","App.js","reportWebVitals.js","store/redux/root_redux.js","store/saga/LoginSaga/LoginSaga.js","store/saga/PostSaga/PostSaga.js","store/saga/root_saga.js","index.js"],"names":["Login","props","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","useState","touched","setTouched","className","isAuthenticate","onSubmit","data","submitButtonHandler","username","password","htmlFor","classNames","type","placeholder","required","message","INITLIZE_APP","SIGNUP_SUBMIT_INIT","SIGNUP_SUBMIT_SUCCESS","LOGOUT_SESSION_INIT","LOGOUT_SESSION_SUCCESS","PROFILE_HANDLER_INIT","PROFILE_HANDLER_SUCCESS","POST_HANDLER_INIT","POST_HANDLER_SUCCESS","SAVE_INIT","SAVE_SUCCESS","EDIT_USER_INIT","EDIT_USER_SUCCESS","DELETE_USER_INIT","DELETE_USER_SUCCESS","SAVE_EDIT_USER_INIT","SAVE_EDIT_USER_SUCCESS","SAVE_CREATE_USER_INIT","SAVE_CREATE_USER_SUCCESS","initialState","loggedInUser","isAuth","openProfile","openPost","usersDetail","editObject","state","action","Navbar","id","onClick","postHandler","data-toggle","firstName","lastName","aria-labelledby","profileHandler","logoutHandler","Button","allProps","classNameProp","push","assignedClass","join","children","ProfileDetail","obj","details","Object","keys","map","key","editProfileHandler","EditProfile","defaultValue","role","phonenumber","pattern","value","dataDetail","saveButtonHandler","changeModeHandler","MyProfile","editMode","setEditMode","dispatch","useDispatch","useSelector","values","valid","console","log","loginAction","UserList","eachChild","editClick","deleteClick","Backdrop","show","clicked","Modal","nextProps","nextState","this","modelClosed","style","transform","opacity","Component","EditUsers","validate","localValue","JSON","parse","localStorage","getItem","loginBlogApp","users","error","userCheck","NewUser","isSubmitted","CreateUser","createUser","saveUserButtonHandler","activePopup","DropDown","options","opt","Pagination","postPerPage","totalPosts","paginate","currentPage","pageSelect","pageNumbers","lastPage","Math","ceil","i","e","target","disabled","number","Users","ediMode","sortType","setState","EditHandler","indexOfLastPost","indexOfFirstPost","reverse","slice","sort","a","b","localeCompare","fontSize","pagePerPost","length","editUser","Profile","toggleTab","setToggleTab","toggleTabClick","index","CreatePost","counter","setCounter","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","post","count","counterHandler","INITILIZE_POST_INIT","INITILIZE_POST_SUCCESS","POST_CLICK_INIT","POST_CLICK_SUCCESS","SAVE_POST_INIT","SAVE_POST_SUCCESS","SHARE_POST_INIT","SHARE_POST_SUCCESS","postClickInit","userPost","postClickSuccess","pendingPostArray","approvedPost","adminPost","Post","SharePost","selecteduser","setSelectedUser","shareButton","setShareButton","user","selectedPost","event","userName","checked","editObjIndex","findIndex","splice","checkBoxHandler","ReadMore","toggleSwitch","readMore","toggleHandler","textRead","text","AllPost","checkBox","checkBoxPopUp","createHandler","modelClicked","onSort","window","confirm","onSharedHandler","date","width","tabContent","onSaveButtonHandler","connect","postAction","selectedUser","useEffect","Spinner","loading","color","size","BlogPost","setTimeout","App","isSubmit","confirmLogoutHandler","onLogoutHandler","onInitlizeApp","onProfileHandler","onPostHandler","onSubmitHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizeHandlerSaga","submitHandlerSaga","logoutHandlerSaga","profileHandlerSaga","postHandlerSaga","saveHandlerSaga","editUserHandlerSaga","deleteUserHandlerSaga","saveUserHandlerSaga","saveCreateUserHandlerSaga","removeItem","userArrayDetail","setItem","stringify","loginBlog","put","updateValue","find","initilizeSage","savePostHandlerSaga","allPostClickSaga","sharePostHandlerSaga","userPosts","arrayPost","sharePost","postObject","approved","forEach","j","localObject","editObjectIndex","watch","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.147f548e.chunk.js","sourcesContent":["\r\nimport \"./Login.css\";\r\nimport React, {  useState } from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Login =(props)=>{\r\n  const{register,formState:{errors,isValid},handleSubmit,reset} = useForm({mode : \"onChange\"});\r\n  const[touched,setTouched] = useState(false);\r\n  \r\n  const onSubmit = (data) => {\r\n    setTouched(true);\r\n    props.submitButtonHandler(data, isValid);\r\n    reset({username : \"\" , password : \"\"});\r\n  }\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"container my-5\">\r\n          <h1 className=\"display-4 heading\">Blog post Login</h1>\r\n          <div className=\"jumbotron \">\r\n            {!props.isAuthenticate && touched && (\r\n              <small className=\"form-text text-muted textIfFail\">\r\n                Please get Approval From Admin Or Check UserName & Password.\r\n              </small>\r\n            )}\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor = \"username\">User Name </label>\r\n                <input className={classNames(\"form-control\",{\"is-invalid\" : errors.username})} type=\"text\" placeholder=\"Enter Your User Name\" {...register(\"username\",{required : \"Field Required\"})}/>\r\n                {errors.username && <p className = \"invalid-feedback\">{errors.username.message}</p>}                \r\n              </div>\r\n              <div className=\"form-group \">\r\n                <label htmlFor = \"password\">Password </label>\r\n                <input className={classNames(\"form-control\",{\"is-invalid\" : errors.password})} type=\"password\" placeholder=\"Enter Your Password\" {...register(\"password\",{required : \"Field Required\"})}/>\r\n                {errors.password && <p className = \"invalid-feedback\">{errors.password.message}</p>}               \r\n              </div>\r\n              <button  className = \"btn btn-outline-info\" type= \"submit\">Sign Up</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Login;","export const INITLIZE_APP = \"INITLIZE_APP\";\r\nexport const SIGNUP_SUBMIT_INIT = \"SIGNUP_SUBMIT_INIT\";\r\nexport const SIGNUP_SUBMIT_SUCCESS = \"SIGNUP_SUBMIT_SUCCESS\";\r\nexport const LOGOUT_SESSION_INIT = \"LOGOUT_SESSION_INIT\";\r\nexport const LOGOUT_SESSION_SUCCESS = \"LOGOUT_SESSION_SUCCESS\";\r\nexport const PROFILE_HANDLER_INIT = \"PROFILE_HANDLER_INIT\";\r\nexport const PROFILE_HANDLER_SUCCESS= \"PROFILE_HANDLER_SUCCESS\";\r\nexport const POST_HANDLER_INIT = \"POST_HANDLER_INIT\";\r\nexport const POST_HANDLER_SUCCESS= \"POST_HANDLER_SUCCESS\";\r\nexport const SAVE_INIT = \"SAVE_INIT\";\r\nexport const SAVE_SUCCESS = \"SAVE_SUCCESS\";\r\nexport const EDIT_USER_INIT = \"EDIT_USER_INIT\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const DELETE_USER_INIT = \"DELETE_USER_INIT\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const SAVE_EDIT_USER_INIT = \"SAVE_EDIT_USER_INIT\";\r\nexport const SAVE_EDIT_USER_SUCCESS = \"SAVE_EDIT_USER_SUCCESS\";\r\nexport const SAVE_CREATE_USER_INIT = \"SAVE_CREATE_USER_INIT\";\r\nexport const SAVE_CREATE_USER_SUCCESS = \"SAVE_CREATE_USER_SUCCESS\";\r\n\r\nexport const initlizerAppInit = () =>{\r\n    return{\r\n        type : INITLIZE_APP\r\n    }\r\n}\r\nexport const submitHandlerInit = (values,valid) =>{  \r\n    return{\r\n        type : SIGNUP_SUBMIT_INIT,\r\n        username : values.username,\r\n        password : values.password,\r\n        isAuth : valid\r\n    }\r\n}\r\nexport const submitHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : SIGNUP_SUBMIT_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openProfile : loginBlogApp.openProfile,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\n\r\nexport const logoutHandlerInit = () =>{\r\n    return{\r\n        type : LOGOUT_SESSION_INIT\r\n    }\r\n}\r\nexport const logoutHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : LOGOUT_SESSION_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openPost:loginBlogApp.openPost,\r\n        openProfile : loginBlogApp.openProfile\r\n    }\r\n}\r\nexport const profileHandlerInit = () =>{\r\n    return{\r\n        type : PROFILE_HANDLER_INIT\r\n    }\r\n}\r\nexport const profileHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : PROFILE_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }\r\n}\r\nexport const postHandlerInit = () =>{\r\n return{\r\n     type : POST_HANDLER_INIT\r\n }   \r\n}\r\nexport const postHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : POST_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }   \r\n   }\r\n\r\n   export const saveHandlerInit = (values) =>{  \r\n    console.log(values);\r\n    return{\r\n        type : SAVE_INIT,\r\n        values : values\r\n    }\r\n}\r\nexport const saveHandlerSuccess = (loginBlogApp) =>{  \r\n    return{\r\n        type : SAVE_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const editUserHandlerInit = (username) =>{\r\n    return{\r\n        type : EDIT_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const editUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : EDIT_USER_SUCCESS,\r\n        editObject : loginBlogApp.editObject\r\n    }\r\n}\r\n\r\nexport const deleteUserHandlerInit = (username) =>{\r\n    return{\r\n        type : DELETE_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const deleteUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : DELETE_USER_SUCCESS,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const saveUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_EDIT_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const saveUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_EDIT_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail,\r\n     editObject : loginBlogApp.editObject,\r\n     loggedInUser : loginBlogApp.loggedInUser   \r\n    }\r\n}\r\nexport const createUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_CREATE_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const createUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_CREATE_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nconst initialState = {\r\n    loggedInUser:{},\r\n    isAuth:false,\r\n    openProfile : false,\r\n    openPost : true,\r\n    usersDetail : [],\r\n    editObject : {},\r\n  \r\n}\r\nconst Login = (state =initialState ,action) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case LOGOUT_SESSION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser :action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case PROFILE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case POST_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case SAVE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editObject : action.editObject,\r\n        }\r\n        case DELETE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case SAVE_EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail,\r\n            editObject : action.editObject,\r\n            loggedInUser : action.loggedInUser\r\n        }\r\n        case SAVE_CREATE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div\r\n            className=\"collapse navbar-collapse container\"\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item dropdown\">\r\n                <p\r\n                  className=\"nav-link\"\r\n                  onClick={props.postHandler}\r\n                >\r\n                  <CommentIcon />\r\n                  Posts\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <div id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item dropdown\">\r\n                    <p\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      id=\"navbarDropdown\"\r\n                      data-toggle=\"dropdown\"\r\n                    >\r\n                      <AccountCircleRoundedIcon />\r\n                      {`${props.loggedInUser.firstName} ${props.loggedInUser.lastName}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserProfile\"\r\n                        onClick={props.profileHandler}\r\n                      >\r\n                        Profile\r\n                      </p>\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserSignOut\"\r\n                        onClick = {props.logoutHandler}\r\n                      >\r\n                        SignOut\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </nav> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n  const { className, ...allProps } = { ...props };\r\n  \r\n  let classNameProp = [\"btn btn-outline-info\"];\r\n  if (className) {\r\n    classNameProp.push(className);\r\n  }\r\n  let assignedClass = classNameProp.join(\" \");\r\n  return (  \r\n      <button className={assignedClass} {...allProps}>\r\n        {props.children}\r\n      </button>   \r\n  );\r\n};\r\nButton.propTypes = {\r\n  className : PropTypes.string,\r\n  onClick : PropTypes.func  \r\n}\r\nexport default Button;","import React from \"react\";\r\nimport \"./ProfileDetail.css\";\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nconst ProfileDetail = (props) =>{\r\n  const obj = props.loggedInUser;\r\n  const details = Object.keys(obj).map((key) => {\r\n    return (\r\n      <div className = \"col-sm-6\" key={key}> \r\n        <div className = \"row\">\r\n          <label className=\"col-sm-4 labelText\" >{key}:</label>\r\n            <div className=\"col-sm-8 \">\r\n              <p className=\"textPara\">{obj[key]}</p>\r\n            </div>\r\n        </div>            \r\n      </div>\r\n    );\r\n  });\r\n  return(\r\n    <div className=\"jumbotron text-center my-5 mx-auto\">\r\n    <div className=\"form-group row justify-content-across\">{details}</div>\r\n    <Button\r\n      className=\"btn btn-outline-info\"\r\n      id=\"editProfileBtn\"\r\n      onClick={props.editProfileHandler}\r\n    >\r\n      EDIT\r\n    </Button>\r\n  </div>\r\n  )\r\n}\r\nexport default ProfileDetail;","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport \"./EditProfile.css\";\r\n// import { Validators } from \"../../../utilities/Validators\";\r\n// import Button from \"../../../UI/Button/Button\";\r\n// import Input from \"../../../UI/Input/Input\";\r\n\r\nconst EditProfile = (props) =>{\r\n  const{register,handleSubmit,formState:{errors,isValid} } = useForm({mode : \"onTouched\"});\r\n\r\n  const onSubmit =(data) => {\r\n  const dataDetail = data;\r\n  dataDetail.username = props.loggedInUser.username;\r\n  dataDetail.role = props.loggedInUser.role;\r\n  props.saveButtonHandler(dataDetail,isValid);\r\n  props.changeModeHandler(); \r\n  }\r\n\r\n  const details = (\r\n    <>\r\n      {/* User Name */}\r\n      <label className=\"col-sm-2 labelText\">User Name :</label>\r\n      <div className=\"col-sm-4 \">\r\n        <p className=\"textPara\">{props.loggedInUser.username}</p>\r\n      </div>\r\n      {/* Password */}\r\n\r\n      <label className=\"col-sm-2 labelText\">Password :</label>\r\n      <div className=\"col-sm-4 \">\r\n      <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.password})} type = \"password\" defaultValue = {props.loggedInUser.password} placeholder = \"Enter Your Password\" {...register(\"password\",{required : \"Field Required\"})}/>\r\n      {errors.password && <p className = \"invalid-feedback\">{errors.password.message}</p>}\r\n      </div>\r\n      \r\n      {/* Role */}\r\n      <label className=\"col-sm-2 labelText\">Role :</label>\r\n      <div className=\"col-sm-4 \">\r\n        <p className=\"textPara\">{props.loggedInUser.role}</p>\r\n      </div>\r\n      \r\n      {/* First Name */}\r\n      <label className=\"col-sm-2 labelText\">First Name:</label>\r\n      <div className=\"col-sm-4 \">\r\n      <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.firstName})} type = \"text\" defaultValue = {props.loggedInUser.firstName} placeholder = \"Enter Your First Name\" {...register(\"firstName\",{required : \"Field Required\"})}/>\r\n      {errors.firstName && <p className = \"invalid-feedback\">{errors.firstName.message}</p>}\r\n      </div>\r\n    \r\n      {/* Last Name */}\r\n      <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n      <div className=\"col-sm-4 \">\r\n      <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.lastName})} type = \"text\" defaultValue = {props.loggedInUser.lastName} placeholder = \"Enter Your Last Name\" {...register(\"lastName\",{required : \"Field Required\"})}/>\r\n      {errors.lastName && <p className = \"invalid-feedback\">{errors.lastName.message}</p>}\r\n      </div>\r\n        \r\n      {/* Mobile Number */}\r\n      <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n      <div className=\"col-sm-4 \">\r\n      <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.phonenumber})} type = \"text\" defaultValue = {props.loggedInUser.phonenumber} placeholder = \"Enter Your Mobile Number\" {...register(\"phonenumber\",{required : \"Field Required\" , pattern : {value : /^\\d{10}$/,message : \"Valid 10 Mobile Number\"}})}/>\r\n      {errors.phonenumber && <p className = \"invalid-feedback\">{errors.phonenumber.message}</p>}\r\n      </div>\r\n    </>\r\n  )\r\n  return (\r\n    <div className=\"jumbotron text-center my-5 mx-auto\">\r\n        <form onSubmit = {handleSubmit(onSubmit)}>\r\n          <div className=\"form-group row justify-content-across\">\r\n            {details}\r\n          </div>\r\n          <button className = \"btn btn-outline-info\" type=\"submit\">Save</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\nexport default EditProfile;","import React, {useState } from \"react\";\r\nimport ProfileDetail from \"./ProfileDetail/ProfileDetail\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\n  const MyProfile = () => {\r\n    const[editMode,setEditMode] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const loggedInUser = useSelector(state => state.Login.loggedInUser);\r\n    const editHandler = () =>{\r\n      setEditMode(true);\r\n    }\r\n    const changeModeHandler = () =>{      \r\n      setEditMode(false);\r\n    }\r\n    return (\r\n      <div >   \r\n      {!editMode ? \r\n       <ProfileDetail loggedInUser = {loggedInUser} editProfileHandler = {editHandler}/>\r\n        : <EditProfile loggedInUser = {loggedInUser} saveButtonHandler = {(values,valid)=>dispatch(loginAction.saveHandlerInit(values,valid))} changeModeHandler = {changeModeHandler}/> }\r\n    </div>\r\n    )\r\n  }\r\nexport default MyProfile; ","import React from 'react'\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nconst UserList = (props) => {\r\n    const editHandler =() =>{\r\n        props.editClick(props.username)\r\n    }\r\n    const deleteHandler = () =>{\r\n        props.deleteClick(props.username);\r\n    }\r\n    let eachChild = (\r\n        <tr key={props.username}>\r\n            <td>{props.username}</td>\r\n            <td>{props.password}</td>\r\n            <td>{props.role}</td>\r\n            <td>{props.firstName}</td>\r\n            <td>{props.lastName}</td>\r\n            <td>{props.phonenumber}</td>\r\n            <td>\r\n                <Button className = \"btn-sm\" onClick = {editHandler}>Edit</Button>\r\n            </td>\r\n            <td>\r\n                <Button className = \"btn-sm\" onClick = {deleteHandler}>Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n    return (\r\n        <>\r\n        <tbody>\r\n            {eachChild}\r\n        </tbody>\r\n    </>\r\n    )\r\n}\r\nexport default UserList;","import React from 'react'\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n)\r\n  \r\n\r\n\r\nexport default Backdrop\r\n","import React, { Component } from 'react';\r\nimport \"./Modal.css\";\r\n// import Aux from \"../../../hoc/Auxilary\";\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }  \r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modelClosed}/>\r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform:this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: this.props.show ? \"1\" : \"0\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\n\r\nconst EditUsers = (props) => {\r\n  const{register,handleSubmit,formState : {errors}} = useForm({mode:\"onTouched\"});\r\n\r\n  const onSubmit = (data) => {\r\n      props.saveButtonHandler(data);\r\n      props.changeModeHandler();\r\n  };\r\n\r\n  const userCheck = (value, message) =>{\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlogApp = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for (let users in localValue) {\r\n      if (localValue[users].username === value  && message !== \"User cant be Same\") {\r\n        return { error: true, message };\r\n      }\r\n      else if(loginBlogApp.loggedInUser.username === value && message === \"User cant be Same\"){\r\n        return false\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const details = (\r\n    <>\r\n      {/* User Name */}\r\n      <label className=\"col-sm-2 labelText\">User Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.username})} defaultValue= {props.editObject.username} placeholder = \"Enter Your User Name\" type = \"text\" {...register(\"username\" , {required : \"Field Required\" ,validate : value =>  !userCheck(value,\"User cant be Same\") || \"User Name Already Exists\"})}/>\r\n        {errors.username && <p className = \"invalid-feedback\">{errors.username.message}</p>}        \r\n      </div>\r\n\r\n      {/* Password */}\r\n      <label className=\"col-sm-2 labelText\">Password :</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control \",{\"is-invalid\" : errors.password})} defaultValue= {props.editObject.password} placeholder = \"Enter Your Password\" type = \"text\" {...register(\"password\" , {required : \"Field Required\" })}/>\r\n        {errors.password && <p className = \"invalid-feedback\">{errors.password.message}</p>}  \r\n      </div>\r\n\r\n      {/* Role */}\r\n      <label className=\"col-sm-2 labelText\">Role :</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n          <select className = {classNames(\"form-control py-1\",{\"is-invalid\" : errors.role})} defaultValue= {props.editObject.role} placeholder = \"Slect Role\" {...register(\"role\" , {required : \"Field Required\" })}>\r\n            <option value=\"\">Select role</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n          {errors.role && <p className = \"invalid-feedback\">{errors.role.message}</p>}\r\n      </div>\r\n      {/* First Name */}\r\n      <label className=\"col-sm-2 labelText\">First Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.firstName})} defaultValue= {props.editObject.firstName} placeholder = \"Enter Your First Name\" type = \"text\" {...register(\"firstName\" , {required : \"Field Required\" })}/>\r\n        {errors.firstName && <p className = \"invalid-feedback\">{errors.firstName.message}</p>}  \r\n     \r\n      </div>\r\n      {/* Last Name */}\r\n      <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.lastName})} defaultValue= {props.editObject.lastName} placeholder = \"Enter Your Last Name\" type = \"text\" {...register(\"lastName\" , {required : \"Field Required\" })}/>\r\n        {errors.lastName && <p className = \"invalid-feedback\">{errors.lastName.message}</p>}  \r\n       \r\n      </div>\r\n\r\n      {/* Mobile Number */}\r\n      <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.phonenumber})} defaultValue= {props.editObject.phonenumber} type = \"text\" placeholder = \"Enter Your Mobile Number\" {...register(\"phonenumber\",{required : \"Field Required\" , pattern : {value : /^\\d{10}$/,message : \"Valid 10 Mobile Number\"}})}/>\r\n        {errors.phonenumber && <p className = \"invalid-feedback\">{errors.phonenumber.message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n  return (\r\n    <div>\r\n      <form onSubmit = {handleSubmit(onSubmit)}>\r\n          <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <div className=\"form-group row justify-content-across\">{details}</div>\r\n              <Button type = \"submit\">Save</Button>\r\n            </div>\r\n      </form>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUsers;","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\n\r\nconst NewUser = (props) => {\r\n  const{register,handleSubmit,formState : {errors,isSubmitted,isValid}} = useForm({mode:\"onTouched\"});\r\n\r\n  const onSubmit = (data) => {\r\n      props.saveButtonHandler(data);\r\n      props.changeModeHandler();\r\n  };\r\n\r\n  const userCheck = (value, message) =>{\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlogApp = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for (let users in localValue) {\r\n      if (localValue[users].username === value  && message !== \"User cant be Same\") {\r\n        return { error: true, message };\r\n      }\r\n      else if(loginBlogApp.loggedInUser.username === value && message === \"User cant be Same\"){\r\n        return false\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const details = (\r\n    <>\r\n      {/* User Name */}\r\n      <label className=\"col-sm-2 labelText\">User Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.username})} placeholder = \"Enter Your User Name\" type = \"text\" {...register(\"username\" , {required : \"Field Required\" ,validate : value =>  !userCheck(value,\"User Name Already Exists\") || \"User Name Already Exists\"})}/>\r\n        {errors.username && <p className = \"invalid-feedback\">{errors.username.message}</p>}        \r\n      </div>\r\n\r\n      {/* Password */}\r\n      <label className=\"col-sm-2 labelText\">Password :</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control \",{\"is-invalid\" : errors.password})} placeholder = \"Enter Your Password\" type = \"text\" {...register(\"password\" , {required : \"Field Required\" })}/>\r\n        {errors.password && <p className = \"invalid-feedback\">{errors.password.message}</p>}  \r\n      </div>\r\n\r\n      {/* Role */}\r\n      <label className=\"col-sm-2 labelText\">Role :</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n          <select className = {classNames(\"form-control py-1\",{\"is-invalid\" : errors.role})} placeholder = \"Slect Role\" {...register(\"role\" , {required : \"Field Required\" })}>\r\n            <option value=\"\">Select role</option>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"user\">User</option>\r\n          </select>\r\n          {errors.role && <p className = \"invalid-feedback\">{errors.role.message}</p>}\r\n      </div>\r\n      {/* First Name */}\r\n      <label className=\"col-sm-2 labelText\">First Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.firstName})} placeholder = \"Enter Your First Name\" type = \"text\" {...register(\"firstName\" , {required : \"Field Required\" })}/>\r\n        {errors.firstName && <p className = \"invalid-feedback\">{errors.firstName.message}</p>}  \r\n     \r\n      </div>\r\n      {/* Last Name */}\r\n      <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.lastName})} placeholder = \"Enter Your Last Name\" type = \"text\" {...register(\"lastName\" , {required : \"Field Required\" })}/>\r\n        {errors.lastName && <p className = \"invalid-feedback\">{errors.lastName.message}</p>}  \r\n       \r\n      </div>\r\n\r\n      {/* Mobile Number */}\r\n      <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n      <div className=\"col-sm-4 my-3 \">\r\n        <input className = {classNames(\"form-control\" ,{\"is-invalid\" : errors.phonenumber})} type = \"text\" placeholder = \"Enter Your Mobile Number\" {...register(\"phonenumber\",{required : \"Field Required\" , pattern : {value : /^\\d{10}$/,message : \"Valid 10 Mobile Number\"}})}/>\r\n        {errors.phonenumber && <p className = \"invalid-feedback\">{errors.phonenumber.message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n  return (\r\n    <div>\r\n      <form onSubmit = {handleSubmit(onSubmit)}>\r\n          <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <div className=\"form-group row justify-content-across\">{details}</div>\r\n              <Button type = \"submit\">Save</Button>\r\n            </div>\r\n      </form>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewUser;","import React from 'react';\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\nimport EditUsers from \"./EditUsers/EditUsers\";\r\nimport NewUser from \"./NewUser/NewUser\";\r\n\r\nconst CreateUser = (props) => {\r\n    const createUser = (\r\n    <div>\r\n        <h3> {props.editMode ? \"Edit User\" : \"Create User\"}</h3>\r\n        {props.editMode ?\r\n         <EditUsers  \r\n            editMode = {props.editMode} \r\n            editObject = {props.editObject} \r\n            saveButtonHandler = {props.saveButtonHandler} \r\n            changeModeHandler = {props.modelClosed} \r\n         /> :\r\n         <NewUser saveButtonHandler = {props.saveUserButtonHandler} \r\n         changeModeHandler = {props.modelClosed} />\r\n        }\r\n    </div>\r\n    )\r\n    return (\r\n        <div>\r\n        <Modal show={props.activePopup} modelClosed = {props.modelClosed}>\r\n           {createUser}\r\n       </Modal>\r\n   </div>\r\n    )\r\n}\r\nexport default CreateUser;","import React, { Component } from 'react'\r\n\r\nexport default class DropDown extends Component {\r\n    render() {\r\n        let options = this.props.options.map(opt =>(\r\n            <option key = {opt} value = {opt}>{opt}</option>\r\n        ));\r\n        return (\r\n            <>\r\n              <select className = \"form-control\" {...this.props}>\r\n                  {options}\r\n              </select>  \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\n\r\nconst Pagination = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  pageSelect,\r\n}) => {\r\n\r\n  const pageNumbers = [];\r\n  const lastPage = Math.ceil(totalPosts / postPerPage);\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"form-inline float-right\">\r\n        <DropDown  onClick={(e) => pageSelect(e.target.value)} options = {[5,10,20] }></DropDown>\r\n        <Button\r\n          onClick={() => paginate(1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          First Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(currentPage + 1)}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Next Page\r\n        </Button>\r\n        {pageNumbers.map((number) => (\r\n          <div key={number} className=\"mx-1\">\r\n            <Button onClick={() => paginate(number)}>{number}</Button>\r\n          </div>\r\n        ))}\r\n        <Button\r\n          onClick={() => paginate(currentPage - 1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          Prev. Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(Math.ceil(totalPosts / postPerPage))}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Last Page\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {  useState } from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport \"./Users.css\";\r\nimport UserList from \"./UserList/UserList\";\r\nimport CreateUser from \"./CreateUser/CreateUser\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\nimport Button from \"../../UI/Button/Button\"\r\nimport ImportExportOutlinedIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\nconst Users = () =>{\r\n    const[state,setState] = useState({\r\n        ediMode : false,\r\n        activePopup : false,\r\n        currentPage : 1,\r\n        postPerPage : 5,\r\n        sortType : \"asc\"\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const editObject =  useSelector(state =>state.Login.editObject);\r\n    const usersDetail = useSelector(state =>state.Login.usersDetail);\r\n\r\n    const EditHandler = (username) =>{\r\n        setState({...state,activePopup : true,editMode : true})\r\n        dispatch(loginAction.editUserHandlerInit(username));\r\n    }\r\n    const createHandler = () =>{\r\n        setState({...state,activePopup : true,editMode : false})\r\n    }\r\n    const modelClicked = () =>{\r\n        setState({...state,activePopup : false,editMode : false})\r\n    }\r\n    const paginate = (pageNumbers) =>{\r\n        setState({...state,currentPage : pageNumbers})\r\n    }\r\n    const pageSelect = (pagePerPost) =>{\r\n        setState({...state,postPerPage : pagePerPost})\r\n    }\r\n    const onSort = ()=>{\r\n        state.sortType === \"asc\" ? setState({...state,sortType : \"desc\"}) : setState({...state,sortType : \"asc\"})      \r\n    }\r\n    \r\n    const indexOfLastPost = state.currentPage * state.postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost -  state.postPerPage;\r\n    let reverseDetail = usersDetail.reverse();\r\n    const currentPosts = reverseDetail.slice(indexOfFirstPost,indexOfLastPost)\r\n    const sortedArray = currentPosts.sort((a,b)=>{\r\n        const isReversed = (state.sortType === \"asc\") ? 1 : -1;\r\n        return isReversed* a.firstName.localeCompare(b.firstName)\r\n    });\r\n    let users = (\r\n        sortedArray.map(details =>{\r\n            return(\r\n                <UserList \r\n                key = {details.username}\r\n                username = {details.username}\r\n                password = {details.password}\r\n                firstName = {details.firstName}\r\n                lastName= {details.lastName}\r\n                role = {details.role}\r\n                phonenumber = {details.phonenumber}\r\n                editClick = {(username)=>EditHandler(username)}\r\n                deleteClick = {(username)=>dispatch(loginAction.deleteUserHandlerInit(username))}\r\n            />\r\n            )\r\n        })\r\n    )\r\n    return (\r\n        <div>\r\n        <div className=\"jumbotron text-center my-5\">\r\n        <div>\r\n            <Button className=\"my-4 float-right\" onClick={createHandler}>Create User</Button>\r\n        </div>\r\n        <div id=\"tableBox row\">             \r\n                <table className=\"table table-striped\">\r\n                <thead>\r\n                <tr>\r\n                    <th>User Name</th>\r\n                    <th>Password</th>\r\n                    <th>Role</th>\r\n                    <th><span>First Name</span> \r\n                    <Button className = \"btn-sm\" onClick ={()=>onSort()}><ImportExportOutlinedIcon fontSize=\"small\"/></Button>\r\n                   </th>\r\n                    <th>Last Name</th>\r\n                    <th>Mobile Number</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>   \r\n            </thead>\r\n                    {users}\r\n                </table>\r\n            </div>\r\n            <div className=\"pageNumbers col-12\" id=\"pagination3\">\r\n                <Pagination pageSelect = {pageSelect} paginate = {paginate} currentPage = {state.currentPage} postPerPage = {state.postPerPage} totalPosts={usersDetail.length}/>\r\n            </div>            \r\n        </div>\r\n        {state.activePopup && <CreateUser \r\n        editObject={editObject} \r\n        activePopup = {state.activePopup} \r\n        editMode = {state.editMode}\r\n        saveButtonHandler ={(editUser) =>{dispatch(loginAction.saveUserHandlerInit(editUser))}}\r\n        saveUserButtonHandler = {(editUser) =>{dispatch(loginAction.createUserHandlerInit(editUser))}}\r\n        modelClosed = {modelClicked}    \r\n        />}\r\n        </div>\r\n    )    \r\n}\r\nexport default Users;\r\n","import React, { useState} from \"react\";\r\nimport \"./Profile.css\";\r\nimport \"../../App.css\";\r\nimport \"../../components/MyProfile/MyProfile\";\r\nimport MyProfile from \"../../components/MyProfile/MyProfile\";\r\nimport Users from \"../../components/Users/Users\";\r\n\r\nconst Profile = (props) =>{\r\n  const[toggleTab,setToggleTab] = useState(1);\r\n\r\n  const toggleTabClick = (index) => {\r\n    setToggleTab(index);\r\n  };\r\n\r\n  return(\r\n    <div className=\"row verticalTab\" >\r\n      <div className=\"col-2 tabDivs\">\r\n        <div className=\"row\">\r\n          <button\r\n            className={\r\n              toggleTab === 1\r\n                ? \"tabss active-tabss btn\"\r\n                : \"tabss btn\"\r\n            }\r\n            onClick={() => toggleTabClick(1)}\r\n          >\r\n            My Profile\r\n          </button>\r\n        </div>\r\n        {props.loggedInUser.role === \"admin\" && (\r\n          <div className=\"row\">\r\n            <button\r\n              className={\r\n                toggleTab === 2\r\n                  ? \"tabss active-tabss btn\"\r\n                  : \"tabss btn\"\r\n              }\r\n              onClick={() => toggleTabClick(2)}\r\n            >\r\n              Users\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"col-10\">\r\n        <div className=\"row content-tabs\">\r\n          <div\r\n            className={\r\n              toggleTab === 1\r\n                ? \"contents  active-contents\"\r\n                : \"contents\"\r\n            }\r\n          >\r\n            <div className =\"row headingColor justify-content-center\">\r\n            <h2 className=\"heading \">Logged In User Detail</h2>\r\n            </div>\r\n            <hr />\r\n            <MyProfile loggedInUser = {props.loggedInUser}/>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleTab === 2\r\n                ? \"contents  active-contents\"\r\n                : \"contents\"\r\n            }\r\n          >\r\n          <div className =\"row headingColor justify-content-center\">\r\n            <h2 className=\"heading \">Users Detail</h2>\r\n\r\n          </div>\r\n            <hr />\r\n            <Users />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile;","import React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport classNames from \"classnames\";\r\n\r\nconst CreatePost = (props) =>{\r\n  const[counter,setCounter] = useState(500);\r\n\r\n  const{register,handleSubmit,formState : {errors}} = useForm({mode:\"onChange\"});\r\n  \r\n  const counterHandler = (value)=>{\r\n    const count = value.length\r\n    setCounter(500 -count);\r\n  }\r\n  \r\n  const onSubmit = (data) =>{\r\n    var today = new Date();\r\n\r\n    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    \r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    \r\n    var dateTime = date+\" \"+time;\r\n\r\n    props.saveButtonHandler(data.post,dateTime);\r\n    props.modelClosed();\r\n  }\r\n  return(\r\n    <div>\r\n    <Modal\r\n      show={props.activePopup}\r\n      modelClosed={props.modelClosed}\r\n    >\r\n      <div>\r\n        <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n          <h3 className=\"display-4\">Create Post</h3>\r\n          <form onSubmit = {handleSubmit(onSubmit)}>\r\n            <textarea className = {classNames(\"form-control\" , {\"is-invalid\": errors.post})} placeholder = \"...WritePost\" {...register(\"post\",{required : \"Write Some Post\",validate : value => counterHandler(value)})}/>\r\n            {errors.post && <p className = \"invalid-feedback\">{errors.post.message}</p>}\r\n\r\n            <p className=\"text-info\">\r\n              {\" \"}\r\n              You Have{\" \"}\r\n              <span\r\n                className={\r\n                  counter === 0 ? \"text-danger\" : \"text-info\"\r\n                }\r\n              >\r\n                {\" \"}\r\n                {counter}\r\n              </span>\r\n              Character Left..\r\n            </p>\r\n          \r\n          <button className = \"btn btn-outline-info\" type=\"submit\">Save Post</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n  )\r\n}\r\nexport default CreatePost;\r\n\r\n// export default class CreatePost extends Component {\r\n//   state = {\r\n//     post: { value: \"\",valid: false, touched: false },\r\n//     counter: 500,\r\n//     date : \"\"\r\n//   };\r\n//   handleChange = (key) => (value, error) => {\r\n//     if (this.state.counter !== 0) {\r\n//       this.setState({ [key]: { value: value, valid: !error, touched: true } });\r\n//       const counter = 500 - value.length;\r\n//       this.setState({ counter: counter });\r\n//     }\r\n//   };\r\n//   submitHandler = ()=>{\r\n//     var today = new Date();\r\n\r\n//     var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    \r\n//     var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    \r\n//     var dateTime = date+\" \"+time;\r\n\r\n//     this.setState({date : dateTime},() => {\r\n//         this.props.saveButtonHandler(this.state.post.value,this.state.date);\r\n//         this.props.modelClosed();\r\n//     });\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Modal\r\n//           show={this.props.activePopup}\r\n//           modelClosed={this.props.modelClosed}\r\n//         >\r\n//           <div>\r\n//             <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n//               <h3 className=\"display-4\">Create Post</h3>\r\n//               <div>\r\n//                 <Input\r\n//                   type=\"textarea\"\r\n//                   placeholder=\"...Write Post\"\r\n//                   value={this.state.post.value}\r\n//                   onChange={this.handleChange(\"post\")}\r\n//                   validators={[\r\n//                     {\r\n//                       check: Validators.required,\r\n//                       message: \"Please Write Post\",\r\n//                     },\r\n//                   ]}\r\n//                   touched={this.state.post.touched}\r\n//                 />\r\n//                 <p className=\"text-info\">\r\n//                   {\" \"}\r\n//                   You Have{\" \"}\r\n//                   <span\r\n//                     className={\r\n//                       this.state.counter === 0 ? \"text-danger\" : \"text-info\"\r\n//                     }\r\n//                   >\r\n//                     {\" \"}\r\n//                     {this.state.counter}\r\n//                   </span>\r\n//                   Character Left..\r\n//                 </p>\r\n//               </div>\r\n//               <Button onClick={this.submitHandler}>Save Post</Button>\r\n//             </div>\r\n//           </div>\r\n//         </Modal>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","export  const INITILIZE_POST_INIT = \"INITILIZE_POST_INIT\";\r\nexport const INITILIZE_POST_SUCCESS = \"INITILIZE_POST_SUCCESS\";\r\n\r\nexport const POST_CLICK_INIT = \"POST_CLICK_INIT\";\r\nexport const POST_CLICK_SUCCESS = \"POST_CLICK_SUCCESS\";\r\n\r\nexport const SAVE_POST_INIT = \"SAVE_POST_INIT\";\r\nexport const SAVE_POST_SUCCESS = \"SAVE_POST_SUCCESS\";\r\n\r\nexport const SHARE_POST_INIT = \"SHARE_POST_INIT\";\r\nexport const SHARE_POST_SUCCESS = \"SHARE_POST_SUCCESS\";\r\n\r\nexport const initializePostInit = ()=>{\r\n    return{\r\n        type : INITILIZE_POST_INIT\r\n    }\r\n}\r\nexport const initializePostSuccess = (userPost) =>{\r\n    return{\r\n        type : INITILIZE_POST_SUCCESS,\r\n        userPost:userPost\r\n    }\r\n}\r\n\r\nexport const postClickInit = (userPost) =>{\r\n    // console.log(userPost);\r\n    return{\r\n        type : POST_CLICK_INIT,\r\n        userPost : userPost\r\n    }\r\n}\r\nexport const postClickSuccess = (pendingPostArray,approvedPost,adminPost) =>{\r\n    return{\r\n        type : POST_CLICK_SUCCESS,\r\n        pendingPostArray : pendingPostArray,\r\n        approvedPost : approvedPost,\r\n        adminPost : adminPost\r\n    }\r\n}\r\n\r\nexport const shareHandlerInit = (selectedUser,selectedPost) =>{\r\n    console.log(selectedUser,selectedPost);\r\n    return{\r\n        type : SHARE_POST_INIT,\r\n        selectedUser : selectedUser,\r\n        selectedPost : selectedPost\r\n    }\r\n}\r\nexport const sharePostSuccess = (userPost) =>{\r\n    return{\r\n        type : SHARE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nexport const saveHandlerInit = (post,date) =>{\r\n    console.log(post,date);\r\n    return{\r\n        type:SAVE_POST_INIT,\r\n        post : post,\r\n        date : date      \r\n    }\r\n}\r\nexport const saveHandlerSuccess = (userPost) =>{\r\n    return{\r\n        type:SAVE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    userPost : [],\r\n    pendingPostArray : [],\r\n    approvedPost : [],\r\n    adminPost : []\r\n}\r\nconst Post = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INITILIZE_POST_SUCCESS : \r\n        return{\r\n            ...state,\r\n            userPost : action.userPost\r\n        }\r\n\r\n        case POST_CLICK_SUCCESS : \r\n        return{\r\n            ...state,\r\n            pendingPostArray : action.pendingPostArray,\r\n            approvedPost : action.approvedPost,\r\n            adminPost : action.adminPost\r\n        }\r\n        case SAVE_POST_SUCCESS : \r\n         return{\r\n             ...state,\r\n             userPost : action.userPost\r\n        }\r\n        case SHARE_POST_SUCCESS :\r\n            return{\r\n                ...state,\r\n                userPost : action.userPost\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Post;","import React, { Component, useState } from \"react\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst SharePost = (props) =>{\r\n  const[selecteduser,setSelectedUser] = useState([]);\r\n  const[shareButton , setShareButton] = useState(false);\r\n\r\n  const checkBoxHandler = (event) =>{\r\n    let userName = [...selecteduser];\r\n    if(event.target.checked){\r\n        userName.push(event.target.value);\r\n    }\r\n    else{\r\n        const editObjIndex = userName.findIndex(user => user === event.target.value);\r\n        userName.splice(editObjIndex, 1);\r\n    }\r\n    if(userName !== null){\r\n      setShareButton(true);\r\n    }\r\n    setSelectedUser(userName);\r\n  }\r\n  const submitHandler = () =>{\r\n    props.saveButtonHandler(selecteduser,props.selectedPost);\r\n    props.modelClosed();\r\n  }\r\n\r\n  const users = props.usersDetail.map((user) => {\r\n    if (user.role !== \"admin\" && user.username !== props.selectedPost.username) {\r\n      return (\r\n        <div key={user.username} className=\"form-check form-check-inline\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            onClick = {(event)=>checkBoxHandler(event)}\r\n            value={user.username}\r\n          />\r\n          <label className=\"form-check-label\" >\r\n            {user.username}\r\n          </label>\r\n        </div>\r\n      );\r\n    }\r\n    return false;\r\n  });\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={props.activePopup}\r\n        modelClosed={props.modelClosed}\r\n      >\r\n        <div>\r\n          <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n            <h4 className=\"display-4\">Share Post</h4>\r\n            <div>{users}</div>\r\n            <Button disabled={!shareButton} className = \"my-2\" onClick={submitHandler}>Share</Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default SharePost;","import React, { Component } from \"react\";\r\n\r\nexport default class ReadMore extends Component {\r\n  state = {\r\n    toggleSwitch: this.props.readMore,\r\n  };\r\n\r\n  toggleHandler = () => {\r\n    this.setState({ toggleSwitch: !this.state.toggleSwitch });\r\n  };\r\n\r\n  render() {\r\n    let textRead = this.state.toggleSwitch ? (\r\n      <p>{this.props.text.slice(0, 200)}</p>\r\n    ) : (\r\n      <p>{this.props.text}</p>\r\n    );\r\n    return (\r\n      <div>\r\n        {textRead}\r\n        <div className=\"row justify-content-end mr-4 \">\r\n          <p\r\n            className=\"nav-link text-info small\"\r\n            onClick={this.toggleHandler}\r\n          >\r\n            {this.state.toggleSwitch ? \"Read More\" : \"Read Less\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\nimport CreatePost from \"../../components/CreatePost/CreatePost\";\r\nimport { connect } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\nimport SharePost from \"../SharePost/SharePost\";\r\nimport \"./AllPost.css\";\r\nimport ReadMore from \"../../UI/ReadMore/ReadMore\";\r\n\r\nclass AllPost extends Component {\r\n  state = {\r\n    activePopup: false,\r\n    currentPage: 1,\r\n    postPerPage: 5,\r\n    sortType: \"asc\",\r\n    checkBox: false,\r\n    checkBoxPopUp: false,\r\n    selectedPost: {},\r\n    readMore: true,\r\n  };\r\n\r\n  createHandler = () => {\r\n    this.setState({ activePopup: true });\r\n  };\r\n  modelClicked = () => {\r\n    this.setState({ activePopup: false, checkBoxPopUp: false });\r\n  };\r\n\r\n  paginate = (pageNumbers) => {\r\n    this.setState({ currentPage: pageNumbers });\r\n  };\r\n  pageSelect = (pagePerPost) => {\r\n    this.setState({ postPerPage: pagePerPost });\r\n  };\r\n\r\n  onSort = () => {\r\n    this.state.sortType === \"asc\"\r\n      ? this.setState({ sortType: \"desc\" })\r\n      : this.setState({ sortType: \"asc\" });\r\n  };\r\n\r\n  checkBoxHandler = (event, post, username) => {\r\n    this.setState({ checkBox: true }, () => {\r\n      if (this.state.checkBox) {\r\n        let adminDecision = window.confirm(\r\n          \"Do you want to allow this post to be visible to other users?\"\r\n        );\r\n        if (adminDecision) {\r\n          this.setState({\r\n            checkBoxPopUp: true,\r\n            selectedPost: { post: post, username: username },\r\n          });\r\n        } else {\r\n          this.setState(\r\n            { selectedPost: { post: post, username: username } },\r\n            () => {\r\n              this.props.onSharedHandler([], this.state.selectedPost);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const indexOfLastPost = this.state.currentPage * this.state.postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postPerPage;\r\n    const currentPosts = this.props.approvedPost.slice(\r\n      indexOfFirstPost,\r\n      indexOfLastPost\r\n    );\r\n    const sortedArray = currentPosts.sort((a, b) => {\r\n      const isReversed = this.state.sortType === \"asc\" ? 1 : -1;\r\n      return isReversed * a.date.localeCompare(b.date);\r\n    });\r\n    // let textRead;\r\n    const approvedPost = sortedArray.map((post) => {\r\n      return (\r\n        <div\r\n          className=\"card m-3 mx-auto cardBox\"\r\n          style={{ width: \"45rem\" }}\r\n          key={post.date}\r\n        >\r\n          <div className=\"postBox\">\r\n            <ReadMore text={post.post} readMore={this.state.readMore} />\r\n          </div>\r\n          <div className=\"row justify-content-between\">\r\n            {this.props.loggedInUser.role === \"admin\" &&\r\n              this.props.tabContent === \"pendingPost\" && (\r\n                <div className=\"col-2\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value={this.state.checkBox}\r\n                    onClick={(event) =>\r\n                      this.checkBoxHandler(event, post.post, post.username)\r\n                    }\r\n                  />\r\n                </div>\r\n              )}\r\n            <div className=\"col-5\">\r\n              <small>{post.username}</small>\r\n            </div>\r\n            <div className=\"col-5\">\r\n              <small>{post.date}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.props.loggedInUser.role !== \"admin\" &&\r\n          (this.props.tabContent === \"allPost\" ||\r\n            this.props.tabContent === \"pendingPost\") ? (\r\n            <Button className=\"float-right\" onClick={this.createHandler}>\r\n              Create Post\r\n            </Button>\r\n          ) : (\r\n            this.props.tabContent === \"promotionalPost\" && (\r\n              <Button className=\"float-right\" onClick={this.createHandler}>\r\n                Create Post\r\n              </Button>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"btn-sm float-right\" onClick={() => this.onSort()}>\r\n            Sort Date\r\n          </Button>\r\n        </div>\r\n        <div className=\"\">{approvedPost}</div>\r\n        <Pagination\r\n          pageSelect={this.pageSelect}\r\n          paginate={this.paginate}\r\n          currentPage={this.state.currentPage}\r\n          postPerPage={this.state.postPerPage}\r\n          totalPosts={this.props.approvedPost.length}\r\n        />\r\n        {this.state.activePopup && (\r\n          <CreatePost\r\n            activePopup={this.state.activePopup}\r\n            saveButtonHandler={this.props.onSaveButtonHandler}\r\n            modelClosed={this.modelClicked}\r\n          />\r\n        )}\r\n        {this.state.checkBoxPopUp && (\r\n          <SharePost\r\n            loggedInUser={this.props.loggedInUser}\r\n            selectedPost={this.state.selectedPost}\r\n            usersDetail={this.props.usersDetail}\r\n            activePopup={this.state.checkBoxPopUp}\r\n            modelClosed={this.modelClicked}\r\n            saveButtonHandler={this.props.onSharedHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPost: state.Post.userPost,\r\n    usersDetail: state.Login.usersDetail,\r\n    loggedInUser: state.Login.loggedInUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSaveButtonHandler: (post, date) => {\r\n      dispatch(postAction.saveHandlerInit(post, date));\r\n    },\r\n    onSharedHandler: (selectedUser, selectedPost) => {\r\n      dispatch(postAction.shareHandlerInit(selectedUser, selectedPost));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPost);","import React, { useState,useEffect } from \"react\";\r\nimport \"./Post.css\";\r\nimport AllPost from \"../../components/AllPost/AllPost\";\r\nimport \"../../App.css\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\n\r\nconst Post = (props) =>{\r\n  const[toggleTab,setToggleTab] = useState(2);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userPost= useSelector(state => state.Post.userPost);\r\n  const pendingPostArray = useSelector(state => state.Post.pendingPostArray);\r\n  const approvedPost = useSelector(state => state.Post.approvedPost);\r\n  const adminPost = useSelector(state => state.Post.adminPost);\r\n\r\n  const toggleTabClick = (index) => {\r\n    setToggleTab(index);\r\n    dispatch(postAction.postClickInit(userPost));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(postAction.initializePostInit());\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    dispatch(postAction.postClickInit(userPost));\r\n  },[userPost])\r\n\r\n  return(\r\n    <div className=\"tabDiv\">\r\n    <div className=\"bloc-tabs\">\r\n      <button\r\n        className={toggleTab === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n        onClick={() => toggleTabClick(1)}\r\n      >\r\n        Pending Post\r\n      </button>\r\n      <button\r\n        className={toggleTab === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n        onClick={() => toggleTabClick(2)}\r\n      >\r\n        All Post\r\n      </button>\r\n      {props.loggedInUser.role === \"admin\" && (\r\n        <button\r\n          className={\r\n            toggleTab === 3 ? \"tabs active-tabs\" : \"tabs\"\r\n          }\r\n          onClick={() => toggleTabClick(3)}\r\n        >\r\n          Promotional Post\r\n        </button>\r\n      )}\r\n    </div>\r\n\r\n    <div className=\"content-tabs\">\r\n      <div\r\n        className={\r\n          toggleTab === 1 ? \"content  active-content\" : \"content\"\r\n        }\r\n      >\r\n        <div className=\"container\">\r\n          <h4 className=\"display-3 text-center heading\">Pending Post</h4>\r\n          <hr />\r\n          <AllPost\r\n            loggedInUser={props.loggedInUser}\r\n            approvedPost={pendingPostArray}\r\n            tabContent = \"pendingPost\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          toggleTab === 2 ? \"content  active-content\" : \"content\"\r\n        }\r\n      >\r\n        <div className=\"container\">\r\n          <h4 className=\"display-3 text-center heading\">All Post</h4>\r\n          <hr />\r\n          <AllPost\r\n            loggedInUser={props.loggedInUser}\r\n            approvedPost={approvedPost}\r\n            tabContent = \"allPost\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          toggleTab === 3 ? \"content  active-content\" : \"content\"\r\n        }\r\n      >\r\n        <div className=\"container\">\r\n          <h4 className=\"display-3 text-center heading\">Promotional Post</h4>\r\n          <hr />\r\n          <AllPost\r\n            loggedInUser={props.loggedInUser}\r\n            approvedPost={adminPost}\r\n            tabContent = \"promotionalPost\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\nexport default Post;","import React from 'react'\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = ({loading}) => {\r\n    return (\r\n        <div className = \"Spinner\">\r\n             <ClimbingBoxLoader color={'#2caabe'} loading={loading} size={20} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport Navbar from \"../../UI/Navbar/Navbar\";\r\nimport Profile from \"../../container/Profile/Profile\";\r\nimport Post from \"../../container/Post/Post\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\n class BlogPost extends Component {\r\n  state={\r\n    openProfile : false,\r\n    openPost : true,\r\n    loading : false\r\n  }\r\n  componentDidMount(){\r\n    this.setState({loading : true});\r\n    setTimeout(()=>{\r\n      this.setState({loading : false});\r\n    },3000)\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.state.openPost !== this.props.openPost || this.state.openProfile !== this.props.openProfile){\r\n\r\n      this.setState({openProfile : this.props.openProfile,openPost : this.props.openPost},()=>{\r\n        this.setState({loading : true});\r\n        setTimeout(()=>{\r\n          this.setState({loading : false});\r\n        },3000)\r\n  \r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Navbar loggedInUser ={this.props.loggedInUser} logoutHandler ={this.props.logoutHandler} profileHandler ={this.props.profileHandler} postHandler = {this.props.postHandler}/>\r\n        {this.state.openPost ? \r\n        this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> : \r\n          <Post loggedInUser ={this.props.loggedInUser}/>\r\n        :\r\n        this.state.openProfile  && this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> :\r\n          <Profile loggedInUser ={this.props.loggedInUser}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport * as loginAction from \"./store/redux/LoginRedux/LoginRedux\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BlogPost from './components/BlogPost/BlogPost';\n\nclass App extends Component {\n  state = {\n    isSubmit : false\n  }\n  \n  componentDidMount(){\n    this.props.onInitlizeApp();\n  }\n\n  componentDidUpdate(){\n    if(this.state.isSubmit !== this.props.isAuth){\n      this.setState({isSubmit : this.props.isAuth})\n    }\n  }\n\n  confirmLogoutHandler = () =>{\n    if (window.confirm(\"Do you want to Signout?\")) {\n     this.props.onLogoutHandler();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.isSubmit ? \n          <Login \n          submitButtonHandler = {this.props.onSubmitHandler} \n          isAuthenticate = {this.props.isAuth}\n          /> \n          : \n          <BlogPost \n          loggedInUser = {this.props.loggedInUser} \n          logoutHandler = {this.confirmLogoutHandler}\n          profileHandler = {this.props.onProfileHandler}\n          openProfile = {this.props.openProfile}\n          postHandler = {this.props.onPostHandler}\n          openPost = {this.props.openPost}\n          /> }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state =>{\n  return{\n    isAuth : state.Login.isAuth,\n    loggedInUser : state.Login.loggedInUser,\n    openProfile : state.Login.openProfile,\n    openPost : state.Login.openPost\n  }\n}\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onInitlizeApp : ()=> dispatch(loginAction.initlizerAppInit()),\n    onSubmitHandler : (values,valid) => dispatch(loginAction.submitHandlerInit(values,valid)),\n    onLogoutHandler : ()=>dispatch(loginAction.logoutHandlerInit()),\n    onProfileHandler : () =>dispatch(loginAction.profileHandlerInit()),\n    onPostHandler : () =>dispatch(loginAction.postHandlerInit())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport Login from \"./LoginRedux/LoginRedux\";\r\nimport Post from \"./PostRedux/PostRedux\";\r\n\r\nexport default combineReducers({\r\n    Login,Post\r\n})\r\n","import * as loginAction from \"../../redux/LoginRedux/LoginRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\nexport function* initilizeHandlerSaga(){\r\n    const localValue =  JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    localStorage.removeItem('loginBlogApp');\r\n    const loginBlogApp = {\r\n        isAuth : false,\r\n        loggedInUser : {},\r\n        openProfile : false,\r\n        openPost : true,\r\n        usersDetail : [],\r\n        editObject : {},\r\n        userPost : []\r\n    }\r\n\r\n    if (localValue === null) {\r\n        const userArrayDetail = [];\r\n        const userDetail = {\r\n            username: \"vivek@123\",\r\n            password: \"Vivek@123\",\r\n            role: \"admin\",\r\n            firstName: \"Vivek\",\r\n            lastName: \"Bindal\",\r\n            phonenumber: 8888269609,\r\n        }\r\n        userArrayDetail.push(userDetail);\r\n       yield localStorage.setItem(\"usersDetail\", JSON.stringify(userArrayDetail));\r\n       loginBlogApp.usersDetail = userArrayDetail;\r\n    }    \r\n    else{\r\n        loginBlogApp.usersDetail = localValue; \r\n    }\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlogApp));\r\n}\r\nexport function* submitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.username && localValue[users].password === action.password){\r\n            loginBlog.isAuth = action.isAuth;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n            yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n            yield put(loginAction.submitHandlerSuccess(loginBlog));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function* logoutHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.isAuth = false;\r\n    updateValue.loggedInUser = {};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    updateValue.editObject = {};\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.logoutHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* profileHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = true;\r\n    updateValue.openPost = false;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.profileHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* postHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.postHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* saveHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.values.username && localValue[users].role === action.values.role){\r\n            localValue[users] = action.values;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n        }        \r\n        yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.saveHandlerSuccess(loginBlog));\r\n    }\r\n}\r\nexport function* editUserHandlerSaga(action){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObject = loginBlog.usersDetail.find(user => user.username === action.username);\r\n        loginBlog.editObject = editObject;\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.editUserHandlerSuccess(loginBlog));    \r\n}\r\n\r\nexport function* deleteUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === action.username);\r\n    loginBlog.usersDetail.splice(editObjIndex, 1);\r\n    localValue = loginBlog.usersDetail;\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.deleteUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n        const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === loginBlog.editObject.username);\r\n        if(loginBlog.editObject.username === loginBlog.loggedInUser.username){\r\n            loginBlog.loggedInUser = action.editUser;\r\n        }\r\n        loginBlog.usersDetail[editObjIndex] = action.editUser;\r\n        localValue = loginBlog.usersDetail;\r\n        loginBlog.editObject = {}    \r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.saveUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveCreateUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    loginBlog.usersDetail.push(action.editUser);\r\n    localValue.push(action.editUser);\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.createUserHandlerSuccess(loginBlog));\r\n}","import * as postAction from \"../../redux/PostRedux/PostRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport function* initilizeSage() {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    if (userPosts === null) {\r\n        let arrayPost = [];\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(arrayPost));\r\n    } else {\r\n        localValue.userPost = userPosts;\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localValue));\r\n        yield put(postAction.initializePostSuccess(userPosts));\r\n        yield put(postAction.postClickInit(userPosts));\r\n    }\r\n}\r\n\r\nexport function* savePostHandlerSaga(action) {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    let approvedPost = false;\r\n    let sharePost = [];\r\n    if (updateValue.loggedInUser.role === \"admin\") {\r\n        approvedPost = true;\r\n    }\r\n    for(let user in updateValue.usersDetail){\r\n        if(updateValue.usersDetail[user].role === \"user\"){\r\n            sharePost.push(updateValue.usersDetail[user].username);           \r\n        }\r\n    }\r\n    const postObject = {\r\n        approved: approvedPost,\r\n        sharePost:sharePost,\r\n        date: action.date,\r\n        post: action.post,\r\n        username: updateValue.loggedInUser.username,\r\n    };\r\n\r\n    userPosts.push(postObject);\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n\r\n    updateValue.userPost = userPosts;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(postAction.saveHandlerSuccess(userPosts));\r\n}\r\n\r\nexport function* allPostClickSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    const pendingPostArray = [];\r\n    const approvedPost = [];\r\n    const adminPost = [];\r\n    // let arrayForPage=[];  \r\n    if (action.userPost !== null) {\r\n        let reverseArray = action.userPost.reverse();\r\n        reverseArray.forEach(e => {\r\n            if (e.username === updateValue.loggedInUser.username || updateValue.loggedInUser.role === \"admin\") {\r\n                // Condition For Pending Post\r\n                if (e.approved === false) {\r\n                    pendingPostArray.push(e);\r\n                    localStorage.setItem(\"postForPending\", JSON.stringify(pendingPostArray));\r\n                }\r\n\r\n                // Condition For all post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role !== \"admin\") {\r\n                        approvedPost.push(e);\r\n                        localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                    }\r\n                }\r\n\r\n                // Condition For Promotional Post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role === \"admin\") {\r\n                        adminPost.push(e);\r\n                        localStorage.setItem(\"postByAdmin\", JSON.stringify(adminPost));\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (e.sharePost !== \"\") {\r\n                for (let i = 0; i < e.sharePost.length; i++) {\r\n                    if (e.sharePost[i] === updateValue.loggedInUser.username) {\r\n                        for (let j = 0; j < updateValue.usersDetail.length; j++) {\r\n                            if (updateValue.usersDetail[j].username === e.sharePost[i] && e.approved === true) {\r\n                                approvedPost.push(e);\r\n                                localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    yield put(postAction.postClickSuccess(pendingPostArray, approvedPost, adminPost));\r\n}\r\n\r\nexport function* sharePostHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localObject = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    let updateValue = [...localValue];\r\n\r\n    const editObjectIndex = updateValue.findIndex(user => (user.username === action.selectedPost.username && user.post === action.selectedPost.post));\r\n    updateValue[editObjectIndex].approved = true;\r\n\r\n        \r\n        updateValue[editObjectIndex].sharePost = action.selectedUser;\r\n    \r\n    localObject.userPost = updateValue;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localObject));\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(updateValue));\r\n    yield put(postAction.sharePostSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as loginAction from \"../redux/LoginRedux/LoginRedux\";\r\nimport * as postAction from \"../redux/PostRedux/PostRedux\";\r\n\r\nimport {initilizeHandlerSaga,submitHandlerSaga,logoutHandlerSaga,profileHandlerSaga,\r\n    postHandlerSaga,saveHandlerSaga,editUserHandlerSaga,\r\n    deleteUserHandlerSaga,saveUserHandlerSaga,saveCreateUserHandlerSaga} from \"./LoginSaga/LoginSaga\";\r\nimport {initilizeSage,savePostHandlerSaga,allPostClickSaga,sharePostHandlerSaga} from \"./PostSaga/PostSaga\";\r\n\r\nexport function* watch(){\r\n    // Login Action\r\n    yield takeLatest(loginAction.INITLIZE_APP,initilizeHandlerSaga);\r\n    yield takeLatest(loginAction.SIGNUP_SUBMIT_INIT,submitHandlerSaga)\r\n    yield takeLatest(loginAction.LOGOUT_SESSION_INIT,logoutHandlerSaga)\r\n    yield takeLatest(loginAction.PROFILE_HANDLER_INIT,profileHandlerSaga)\r\n    yield takeLatest(loginAction.POST_HANDLER_INIT,postHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_INIT,saveHandlerSaga)\r\n    yield takeLatest(loginAction.EDIT_USER_INIT,editUserHandlerSaga)\r\n    yield takeLatest(loginAction.DELETE_USER_INIT,deleteUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_EDIT_USER_INIT,saveUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_CREATE_USER_INIT,saveCreateUserHandlerSaga)\r\n\r\n    // Post Action\r\n    yield takeLatest(postAction.INITILIZE_POST_INIT,initilizeSage)\r\n    yield takeLatest(postAction.SAVE_POST_INIT,savePostHandlerSaga)\r\n    yield takeLatest(postAction.POST_CLICK_INIT,allPostClickSaga)\r\n    yield takeLatest(postAction.SHARE_POST_INIT,sharePostHandlerSaga)\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./store/redux/root_redux\";\nimport {watch} from \"./store/saga/root_saga\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}